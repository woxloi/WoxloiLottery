plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.8.0-RC'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'red.man10'
version = '2.0'

repositories {
    mavenCentral()
    maven { url = 'https://repo.papermc.io/repository/maven-public/' }
    maven { url = 'https://jitpack.io' }
}

dependencies {
    compileOnly fileTree(dir: 'libs', include: '*.jar')
    compileOnly("io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT")
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compileOnly 'com.github.dmulloy2:ProtocolLib:5.0.0'
    implementation("net.kyori:adventure-platform-bukkit:4.3.1")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2")
    compileOnly 'com.github.tororo1066.ItemFrameProtector:API:83c9fea53b'
}

def targetJavaVersion = 17
java {
    sourceCompatibility = JavaVersion.toVersion(targetJavaVersion)
    targetCompatibility = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < JavaVersion.toVersion(targetJavaVersion)) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}

shadowJar {
    archiveFileName.set("${project.name}-${project.version}.jar")
}
